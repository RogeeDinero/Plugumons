#!/bin/bash
# Force Cargo to NOT use lockfile version 4

echo "🔧 Forcing Cargo to use lockfile version 3 (compatible)"
echo ""

cd /mnt/c/Users/GamingPc/Plugumons/solana-program

# Set to stable
rustup default stable
rustup override set stable

echo "✅ Rust: $(rustc --version)"
echo ""

# Clean everything including hidden dirs
echo "🧹 Deep cleaning..."
rm -f Cargo.lock
rm -f programs/*/Cargo.lock
rm -rf target/
rm -rf .anchor/

# Create a minimal Cargo.lock with version 3 to prevent v4 generation
echo "📝 Creating lockfile version 3 stub..."
cat > Cargo.lock << 'EOF'
# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3

[[package]]
name = "plugumons-staking"
version = "0.1.0"
EOF

# Try to update dependencies without generating v4
echo ""
echo "🔄 Updating dependencies with version 3..."
cargo update --workspace 2>&1 | head -20

# Now try to build
echo ""
echo "🏗️  Building with Anchor..."
anchor build

if [ $? -eq 0 ]; then
    echo ""
    echo "✅✅✅ SUCCESS! ✅✅✅"
    ls -lh target/deploy/*.so
    exit 0
else
    echo ""
    echo "❌ Still failed. Trying direct cargo build..."
    
    # Try building just the program
    cd programs/plugumons-staking
    
    # Create minimal lockfile here too
    cat > Cargo.lock << 'EOF'
# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3

[[package]]
name = "plugumons-staking"
version = "0.1.0"
EOF
    
    cargo build-sbf --manifest-path Cargo.toml
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "✅ Direct build succeeded!"
        find ../../target -name "*.so"
    else
        echo ""
        echo "❌ Direct build also failed"
        echo ""
        echo "🔍 The issue appears to be with Anchor/Cargo toolchain compatibility"
        echo ""
        echo "💡 Alternative: Build using Docker"
        echo "   docker run --rm -v \$(pwd):/workspace projectserum/build:v0.29.0 anchor build"
    fi
fi
